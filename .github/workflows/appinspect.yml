name: splunk-appinspect
on:
  pull_request:
    branches:
      - main
      - master
    paths:
      - "src/**"
    types: [opened, ready_for_review, synchronize]
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: install dependencies
        run: sudo apt-get install -y jq curl wget
      - name: Download packaging toolkit
        run: wget https://download.splunk.com/misc/packaging-toolkit/splunk-packaging-toolkit-1.0.1.tar.gz
      - name: Install packaging toolkit
        run: pip install splunk-packaging-toolkit-1.0.1.tar.gz
      - name: Package app
        run: |
          cd src
          slim package -o ~/build/packages SA-CrowdstrikeDevices
      - name: Download and run helper script
        run: |
          mkdir -p ~/.local/bin
          cd ~/.local/bin
          wget https://raw.githubusercontent.com/ZachChristensen28/splunk-app-dev/master/validate.sh && chmod +x validate.sh
      - name: Validate credentials
        run: |
          API_USER='${{ secrets.API_USER }}' API_PASS='${{ secrets.API_PASS }}' validate.sh -v
      - name: Submit App for vetting
        id: app
        run: |
          cd ~/build/packages
          validate.sh submit $(ls)
          echo "::set-output name=app::$(realpath $(ls))"
      - name: Check Status
        run: validate.sh status
      - name: Get report
        id: report
        run: |
          validate.sh report
          cd ~/build/reports
          echo "::set-output name=report::$(realpath $(ls))"
      - name: Collect report
        uses: actions/upload-artifact@v3
        with:
          name: appinspect report
          path: ${{ steps.report.outputs.report }}
      - name: Collect app package
        uses: actions/upload-artifact@v3
        with:
          name: App package
          path: ${{ steps.app.outputs.app }}
      - name: Check Appinspect for issues
        run: validate.sh get_errors
